1.	String 클래스와 StringBuffer 클래스, StringBuilder 클래스의 차이점과 특징을 각각 3가지 이상 기술하시오. (25점)
결과 | 점수 (25.0점)
수강생 답	String 클래스는 문자열을 입력할때마다 저장공간이 생기는 것이고
String Buffer클래스와 StringBuilder클래스는 객체의 저장공간을 만들어서 관리하는 것이다.

String 클래스에서 수정,삭제가 많을 경우 시간이 오래걸리고 성능이 저하되기 때문에

StringBuffer,StringBuilder를 사용해주는게 좋다.

StringBuffer는 (Thread Safe)기능을 가지고 있으며 메소드가 전부 동기화 되어있고

StringBuilder는 동기화되어있지 않다.

다중메소드를 처리할때는 순차적으로 진행되는 StringBuffer보다 다충처리가 되는 StringBuilder를 사용하는 편이 좋다.

답안첨삭	
모범답안	
[String 클래스]

1. 한번 기록된 문자열값을 수정할 수 없다. (immutable)

2. 문자열 수정시 변경된 문자열의 새 주소가 리턴된다.

3. 문자열 조작 작업에 부적합함.

4. 문자열 저장소(Literal Pool) 에 기록된다.

[StringBuffer 클래스]

1. 문자열 값을 수정할 수 있는 mutable(가변)이다.

2. 기본 16문자 크기로 지정된 버퍼를 이용하며, 크기를 증가시킬 수 있다.

3. 쓰레드 safe 기능을 제공한다.

[StringBuilder 클래스]

1. 문자열 값을 수정할 수 있는 mutable(가변)이다.

2. 기본 16문자 크기로 지정된 버퍼를 이용하며, 크기를 증가시킬 수 있다.

3. 쓰레드 safe 기능이 제공되지 않는다.

평가기준	프로그래밍 언어의 문자열관련 라이브러리에 대한 특징과 이해도를 평가한다.
수행준거	애플리케이션에 필요한 라이브러리를 검색하고 선택할 수 있다.
2.	
다음의 문자열 값을 기호문자(/# ,) 단위로 분리하여 각각의 문자열로 출력 처리 방법을 String 클래스와 StringTokenizer 클래스를 각각 사용하여 기술하시오. (25점)

String colors = "red/yellow#green blue,orange";

결과 | 점수 (10.0점)
수강생 답	import java.util.StringTokenizer;

public class String_token {
	public static void main(String[] args) {
		
		String colors = "red/yellow#green blue,orange";
		StringTokenizer str = new StringTokenizer(colors, "/#, ");
		while(true) {
			System.out.println(str);
		}
	}
}

답안첨삭	-15


프로그래밍 언어의 문자열 처리를 위한 라이브러리를 부분적으로 사용하여 원하는 기능을 일부 처리할 수 있다.

모범답안	
[String 클래스 사용]

String[] colorValues = colors.split("[/# ,]");

for(String color : colorValues){

System.out.println(color);

}

[StringTokenizer 클래스 사용]

StringTokenizer colorTokens = new StringTokenizer(colors, "/# ,");

while(colorTokens.hasMoreTokens()){

System.out.println(colorTokens.nextToken());

}

평가기준	라이브러리 적용을 위한 문자열 처리에 대한 기술력을 평가한다.
수행준거	애플리케이션 구현을 위해 선택한 라이브러리를 프로그래밍 언어 특성에 맞게 구성할 수 있다.
3.	인터페이스와 추상클래스의 차이점에 대해 3가지 이상 기술하시오. (15점)
결과 | 점수 (15.0점)
수강생 답	추상클래스
바디가 없는 형태로 주로 상수 모음, 필요한 메소드를 모아서 상속하는데 사용한다.

클래스가 추상화 클래스일 경우 메소드도 추상화 메소드로 변경해줘야 오류가 생기지 않는다.

class 명 앞에 abstract를 씀으로서 상속을 한다.

인터페이스

추상화 클래스로서 상속받을때 마지막에 implements (인터페이스 명) 으로 입력한다.

주로 메소드 가이드 등에 사용한다. 

하나만 상속받을수 있는 보통 상속 extends와는 다르게 다중 상속이 가능하다.

답안첨삭	
모범답안	
1. 추상클래스는 단일 상속만 가능하지만 인터페이스는 다중 상속이 가능하다.

2. 추상클래스 구현시에는 extends 키워드를 사용하지만, 인터페이스 구현시에는 implements 키워드를 사용한다.

3. 추상클래스는 abstract메소드가 0개 이상 존재하지만, 인터페이스는 모든 메소드가 abstract이다.

4. 추상클래스는 명시적으로 abstract를 사용해야 하지만, 인터페이스는 묵시적으로 abstrace이다.

5. 추상클래스는 일반 필드를 가질 수 있지만, 인터페이스는 상수필드만 가질 수 있다.

평가기준	애플리케이션에서의 추상클래스와 인터페이스 작성에 대한 이해도를 평가한다.
수행준거	애플리케이션을 최적화하기 위해 프로그래밍 언어의 특성을 활용할 수 있다.
4.	
다음 연산자들 목록에서 연산자의 우선순위가 높은 순서대로 기술하시오. (10점)

[산술연산자, 삼항연산자, 논리연산자, 최우선연산자, 대입연산자]

결과 | 점수 (10.0점)
수강생 답	최우선연산자>산술연산자>삼항연산자>논리연산자>대입연산자
답안첨삭	
모범답안	최우선연산자 -> 산술연산자 -> 논리연산자 -> 삼항연산자 -> 대입연산자
평가기준	프로그래밍 언어 기본 문법에서의 연산자에 대한 이해도를 평가한다.
수행준거	프로그래밍 언어의 연산자와 명령문을 사용하여 애플리케이션에 필요한 기능을 정의하고 사용할 수 있다.
5.	변수 선언 시 사용되는 기본(primitive) 자료형별 각 메모리 할당 크기를 기술하시오. (10점)
결과 | 점수 (3.75점)
수강생 답	정수형
1B byte / 2B short / 3B int / 4B long

실수형

1B double / 2B Float

논리형

1B Boolean

문자형

3B char



답안첨삭	3개만 맞음 -6.25




모범답안	
boolean - 1byte

char - 2byte

byte - 1byte

short - 2byte

int - 4byte

long - 8byte

float - 4byte

double - 8byte

평가기준	응용소프트웨어 개발에 필요한 프로그래밍 언어의 데이터 타입에 대한 이해도를 평가한다.
수행준거	응용소프트웨어 개발에 필요한 프로그래밍 언어의 데이터 타입을 적용하여 변수를 사용할 수 있다.
6.	
자바에서의 클래스변수, 인스턴스변수, 지역변수의 특징에 대해 상세히 기술하시오. (15점)

클래스변수 :

인스턴스변수 :

지역변수 :

결과 | 점수 (10.0점)
수강생 답	클래스변수: JVM에서 기본값을 받아 사용자의 입력을 받은 값을 초기화 하여 사용한다.
인스턴스변수: 클래스 변수의 과정과 같으나 생성자에서 다시 한번 초기화를 해줘야한다.

지역변수: 클래스 인스턴스 변수 이외의 변수들

답안첨삭	틀린설명이 포함되어 있음 -5


프로그래밍 언어의 각 변수들의 특성을 대략적으로 이해하고 설명하였다.

모범답안	
클래스변수 : static 으로 선언된 멤버변수, 프로그램 실행시 정적메모리 영역에 자동 할당되며, 프로그램 종료시 자동 소멸되는 변수

인스턴스변수 : new 에 의해 동적메모리 힙(heap) 에 할당되는 객체(인스턴스) 안에 할당되는 변수로 this 에 의해 참조된다. 가비지콜렉터에 의해 삭제된다.

지역변수 : 메소드 또는 제어문 안에서 선언된 변수로 메모리 스택(stack)에 메소드 또는 제어문 실행시 할당되었다가 메소드 또는 제어문 종료시 소멸된다.

평가기준	자바에서의 각 변수의 특징을 정확히 이해하고 있는지 평가한다.
수행준거	프로그래밍 언어별 특성을 파악하고 설명할 수 있다.
