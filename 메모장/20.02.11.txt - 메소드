
 + 메소드, Method

  - 함수, Function

  - 클래스의 기능 또는 동작 또는 행위 등을 정의하는 코드

  - 객체 변수를 통해 호출하여 사용한다.

  - 객체들 간의 데이터 전달 수단으로 사용한다.

 + 메소드 정의 방법

	[접근제한자] [리턴타입] [메소드명] (매개변수){
	  //실행코드
	}


	- return 데이터가 없을 경우 리턴타입을 void로 작성
   
 	- 매개변수가 없을 경우 () 안을 비워둔다. 

	  // 0. 메소드의 기본형태 작성
	  // 1. 메소드 이름 -> 만들고자 하는 기능을 대표하는 이름으로 적절히
	  // 2. 매개변수 작성 -> 기능을 수행하는데 필요한 입력 값을 저장하는 변수
	  // 3. 실행코드 작성 -> 메소드가 수행할 기능을 작성, 구현
	  // 4. return코드 작성 - > 수행결과로 사용 할 반환 값 작성
	  // 5. return데이터 타입 작성 -> return 코드 값의 데이터타입을 명시

	*Arrays.toString(배열)
	*Arrays.fill(arr,5)-5로 전부 채워줌


	 스택(Stack)		vs		힙(Heap)

	변수가 저장되는곳		new로 만드는
	정적 할당 공간			동적 할당 공간(메모리)
	int [] arr;		= 	new int[5];

 + Call By Value, 값에 의한 호출
  
  - 메소드를 호출하는데 전달되는 인자가 기본데이터 타입일 때
  
  - 호출된 메소드(Callee)에서 매개변수를 변경하더라도
    호출한 메소드(Caller)에서는 값이 변경되지 않는다.


 + Call By Reference,  참조에 의한 호출

  - 메소드를 호출할 때 전달되는 인자가 참조형일 때

  - 호출된 메소드(Callee)에서 매개변수를 변경하면 	
    호출한 메소드(Caller)에서는 값이 변경된다.


 + Call By Address : Pointer

 + Call By Name : 


 + package

