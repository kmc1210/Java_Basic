
 + 상속, Inheritance

  - 목적 : 클래스 코드의 재사용

  - 기존의 클래스 코드를 재사용하여 새로운 클래스를 작성할 수 있게 해주는 문법

	** 코드의 재사용

	기존의 코드를 이용하여 새로운 코드를 개발하는 것
	( 필요한 부분은 수정하고, 추가하기도 한다 )

  - 클래스의 중복되는 코드를 하나의 클래스로 관리할 수 있게 해준다.

  - 상속을 주는 클래스의 코드를 변경하면 상속을 받는 클래스들 전부 반영된다.

  - 상속을 주는 클래스 : 부모, 수퍼, 상위, Based(기준이 되는)

  - 상속을 받는 클래스 : 자식, 서브, 하위, Derived(유도된, 파생된)






  + 상속의 문법

	class Parent {
	  int n1;
	  int n2;
	  String name;
	}

	class Child extends Parent {
	
	}

	Child 클래스는 Parent 클래스의 멤버필드를 상속받음
	Child 클래스는 필드를 선언하지 않았지만 가지고 있는 것 처럼 사용할 수 있음




  + 메소드 오버로딩(Overloading) //불러온다.

	- 메소드 중복정의


	- 같은 이름의 메소드를 매개변수의 개수나 타입을 다르게 하여 
	  다른 메소드를 정의하는것


  + 메소드 오버라이딩(overriding) //덮어씌운다.

	- 메소드 재정의

	- 상속받은 메소드를 자식클래스가 새롭게 정의하는 것













