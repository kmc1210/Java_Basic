 + 다형성, Polymorphism
 
  - 상속관계에 있는 클래스들에서 나타나는 특징
  
  - 부모클래스 타입으로 자식클래스 타입들을 대신하여 코드를 작성할 수 있게된다.
  
      -> 이미 만들어둔 부모클래스 타입을 상속하여 중복으로 작성하지 않아도 된다.
      -> 코드 재사용성이 증가된다.
      
  - 부모클래스 타입의 매개변수가 자식클래스 타입들 대신 사용될 수 있다.
  
      ex)   public void method(Parent p) {
            }
            
      -> 오버로딩해야하는 메소드의 수를 줄일 수 있다.
      
 + 인터페이스, interface
 
  - 추상메소드와 상수만 멤버로 가지는 일종의 추상 클래스
  
  - 멤버필드는 public static final 이 기본적으로 적용된다. 
  
  - 멤버메소드는 abstract 가 기본적으로 적용된다.
  
      -> 멤버필드에 public static final 중 무엇이든지 적용하지 않아도 전부 자동 적용된다.
      -> 멤버메소드에 abstract 를 적용하지 않아도 자동 적용
     
  - 인터페이스 사용 목적(용도)
  
      상수 모음집 : 상수들만 모아 따로 관리하기 위해 사용 
      
      메소드 개발 가이드 : 개발해야하는 메소드의 형식을 강제하기 위해 사용
