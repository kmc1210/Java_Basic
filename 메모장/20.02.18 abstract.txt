+ abstract 키워드

  - 추상화 키워드
  
  - 클래스와 메소드를 정의할 때 사용한다.
  
  - abstract 키워드를 적용하면 추상클래스, 추상메소드 라고 부른다.


+ 추상클래스
  
  - 실체화(인스턴스화) 될 수 없는 클래스
  
  - new 연산자를 이용하여 객체를 생성 할 수 없다.
  
  - 인스턴스를 생성할 수 없는 클래스
  
  - 추상메소드를 멤버로 가질 수 있는 클래스
  
  - 형태
      [접근제한자] abstract class [클래스명] {
      
      }
  
+ 추상메소드

  - 메소드의 구현부(몸체, Body, {}부분) 가 없는 메소드
  
  - 구현되지 않고 추상화 된 메소드

  - 추상메소드를 상속받은 자식클래스는 반드시 추상메소드를 처리해야만 한다.
    ( 오버라이딩하여 구현부를 생성해준다. )

  - 형태
  
      [ 접근제한자 ] abstract [ 리턴타입 ] 메소드명 (매개변수);
      
   - 추상메소드를 멤버로 가지는 클래스는 반드시 추상클래스여야한다.


 + 자식클래스가 추상메소드를 상속받는 경우 처리하는 방법
  - 자식클래스에서 에러가 나지 않도록 처리하는 방법
  
      1. 상속받은 추상메소드를 구현한다({}영역을 채워넣는다.)
        - 오버라이딩 처리
        
        -> 자식클래스가 추상메소드를 반드시 구현하도록 강제할 수 있다.
        
      2. 자식클래스를 추상클래스로 지정한다.
      
      ex)   abstract class Parent {
              public abstract void out();
            }
            
            // 해결방법 1.
            class Child extends Parent{
              @Override
              public void out();
            }
            
            // 해결방법 2.
            abstract class Children extends Parent{
            
            }
